version: "3.4"

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_MESSAGE_MAX_BYTES=2147483647 
      - KAFKA_LOG_SEGMENT_BYTES=5000000
    depends_on:
      - zookeeper
  sql-container:
    image: 'mcr.microsoft.com/mssql/server:latest'
    restart: always
    ports:
        - '1433:1433'
    environment:
        - ACCEPT_EULA=Y
        - SA_PASSWORD=Secret@1234
        - MSSQL_PID=Express
    networks:
        - mydockernetwork
  mongo-container:
    container_name: socialMedia
    image: mongo:latest
    restart: always
    ports:
      - '27018:27017'
    volumes:
      - "mongo_data:/data/db"
    networks:
        - mydockernetwork

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongo_data:
    driver: local
   
networks:
  mydockernetwork:
      name: mydockernetwork

